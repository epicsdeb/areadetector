# This file was automatically generated on Fri 25 Feb 2011 13:34:29 GMT from
# source: /dls_sw/prod/R3.14.11/support/firewireDCAM/1-8/etc/makeIocs/example.xml
# 
# *** Please do not edit this file: edit the source file instead. ***
# 
/**
\page build_instructions Build Instructions for example
Build Instructions for example
<ol>
<li> Add the dependencies to configure/RELEASE.
\verbatim
BUSY=/dls_sw/prod/R3.14.11/support/busy/1-3dls3
FFMPEGSERVER=/dls_sw/prod/R3.14.11/support/ffmpegServer/1-2
FIREWIREDCAM=/dls_sw/prod/R3.14.11/support/firewireDCAM/1-8
ASYN=/dls_sw/prod/R3.14.11/support/asyn/4-14
DC1394=/dls_sw/prod/R3.14.11/support/dc1394/2-1-2
AREADETECTOR=/dls_sw/prod/R3.14.11/support/areaDetector/1-7beta1
\endverbatim

<li> Add the DBD dependencies to src/Makefile
\verbatim
example_DBD += base.dbd
example_DBD += asyn.dbd
example_DBD += busySupport.dbd
example_DBD += ADSupport.dbd
example_DBD += NDPluginSupport.dbd
example_DBD += firewireDCAM.dbd
example_DBD += ffmpegServer.dbd
\endverbatim

<li> Add the LIBS dependencies to src/Makefile
\verbatim
example_LIBS += ffmpegServer
example_LIBS += firewireDCAM
example_LIBS += dc1394
example_LIBS += NDPlugin
example_LIBS += ADBase
example_LIBS += netCDF
example_LIBS += PvAPI
example_LIBS += GraphicsMagick++
example_LIBS += GraphicsMagickWand
example_LIBS += GraphicsMagick
example_LIBS += NeXus
example_LIBS += mfhdf
example_LIBS += df
example_LIBS += hdf5
example_LIBS += mxml
example_LIBS += busy
example_LIBS += asyn
example_SYS_LIBS += tiff
example_SYS_LIBS += jpeg
example_SYS_LIBS += z
example_SYS_LIBS += gomp
example_SYS_LIBS += X11
example_SYS_LIBS += lcms
example_SYS_LIBS += xml2
example_SYS_LIBS += png12
example_SYS_LIBS += bz2
example_SYS_LIBS += Xext
example_SYS_LIBS += freetype
\endverbatim

<li> Use the template files to add records to the database.
\verbatim

# Macros:
#  P        Device Prefix
#  R        Device Suffix
#  PORT     Asyn Port name
#  TIMEOUT  Timeout
#  ADDR     Asyn Port address
file $(AREADETECTOR)/db/ADBase.template
{
pattern { P, R, PORT, TIMEOUT, ADDR }
    { "TESTFWDCAM1", ":CAM:", "CAM1.CAM", "1", "0" }
    { "TESTFWDCAM2", ":CAM:", "CAM2.CAM", "1", "0" }
}

# Macros:
#  P      Device Prefix
#  R      Device Suffix
#  PORT   Asyn Port name
#  FR     Max framerate enum
#  DUMMY  Dummy empty macro to satisfy vdct
file $(FIREWIREDCAM)/db/firewireDCAM.template
{
pattern { P, R, PORT, FR, DUMMY }
    { "TESTFWDCAM1", ":CAM:", "CAM1.CAM", "3", "" }
    { "TESTFWDCAM2", ":CAM:", "CAM2.CAM", "3", "" }
}

# Macros:
#  P             Device Prefix
#  R             Device Suffix
#  PORT          Asyn Port name
#  TIMEOUT       Timeout
#  ADDR          Asyn Port address
#  NDARRAY_PORT  Input Array Port
#  NDARRAY_ADDR  Input Array Address
#  Enabled       Plugin Enabled at startup?
file $(AREADETECTOR)/db/NDPluginBase.template
{
pattern { P, R, PORT, TIMEOUT, ADDR, NDARRAY_PORT, NDARRAY_ADDR, Enabled }
    { "TESTFWDCAM1", ":CC:", "CAM1.CC", "1", "0", "CAM1.CAM", "0", "1" }
    { "TESTFWDCAM2", ":CC:", "CAM2.CC", "1", "0", "CAM2.CAM", "0", "1" }
    { "TESTFWDCAM1", ":ARR:", "CAM1.ARR", "1", "0", "CAM1.CAM", "0", "1" }
    { "TESTFWDCAM2", ":ARR:", "CAM2.ARR", "1", "0", "CAM2.CAM", "0", "1" }
    { "TESTFWDCAM1", ":MJPG:", "CAM1.MJPG", "1", "0", "CAM1.CC", "0", "1" }
    { "TESTFWDCAM2", ":MJPG:", "CAM2.MJPG", "1", "0", "CAM2.CC", "0", "1" }
}

# Macros:
#  P        Device Prefix
#  R        Device Suffix
#  PORT     Asyn Port name
#  TIMEOUT  Timeout
#  ADDR     Asyn Port address
file $(AREADETECTOR)/db/NDColorConvert.template
{
pattern { P, R, PORT, TIMEOUT, ADDR }
    { "TESTFWDCAM1", ":CC:", "CAM1.CC", "1", "0" }
    { "TESTFWDCAM2", ":CC:", "CAM2.CC", "1", "0" }
}

# Macros:
#  P          Device Prefix
#  R          Device Suffix
#  PORT       Asyn Port name
#  TIMEOUT    Timeout
#  ADDR       Asyn Port address
#  TYPE       Asyn Type e.g. Int32
#  FTVL       Format, e.g. Int
#  NELEMENTS  Number of elements
file $(AREADETECTOR)/db/NDStdArrays.template
{
pattern { P, R, PORT, TIMEOUT, ADDR, TYPE, FTVL, NELEMENTS }
    { "TESTFWDCAM1", ":ARR:", "CAM1.ARR", "1", "0", "Int16", "USHORT", "1228800" }
    { "TESTFWDCAM2", ":ARR:", "CAM2.ARR", "1", "0", "Int16", "USHORT", "1228800" }
}

# Macros:
#  P        Device Prefix
#  R        Device Suffix
#  PORT     Asyn Port name
#  QUALITY  Jpeg Quality in percent
file $(FFMPEGSERVER)/db/ffmpegStream.template
{
pattern { P, R, PORT, QUALITY }
    { "TESTFWDCAM1", ":MJPG:", "CAM1.MJPG", "100" }
    { "TESTFWDCAM2", ":MJPG:", "CAM2.MJPG", "100" }
}
\endverbatim

<li> Add the startup commands to st.cmd
\verbatim

# Loading libraries
# -----------------

# Device initialisation
# ---------------------

cd "$(TOP)"

dbLoadDatabase "dbd/example.dbd"
example_registerRecordDeviceDriver(pdbbase)

# Scan the firewire bus for cameras
FDC_InitBus()
# FDC_Config(asynPort, cameraID, busSpeed, nBuffers, maxMemory, disableScalable)
FDC_Config("CAM1.CAM", 0x00B09D01006F677D, 800, 50, -1, 0)

# FDC_Config(asynPort, cameraID, busSpeed, nBuffers, maxMemory, disableScalable)
FDC_Config("CAM2.CAM", 0x00B09D01008ADB4F, 800, 50, -1, 0)

# NDColorConvertConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory)
NDColorConvertConfigure("CAM1.CC", 16, 0, "CAM1.CAM", 0, 50, -1)

# NDColorConvertConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxBuffers, maxMemory)
NDColorConvertConfigure("CAM2.CC", 16, 0, "CAM2.CAM", 0, 50, -1)

# NDStdArraysConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxMemory)
NDStdArraysConfigure("CAM1.ARR", 2, 0, "CAM1.CAM", 0, -1)

# NDStdArraysConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxMemory)
NDStdArraysConfigure("CAM2.ARR", 2, 0, "CAM2.CAM", 0, -1)

ffmpegServerConfigure(8080)
# ffmpegStreamConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxMemory)
ffmpegStreamConfigure("CAM1.MJPG", 2, 0, "CAM1.CC", "0", -1)

# ffmpegStreamConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxMemory)
ffmpegStreamConfigure("CAM2.MJPG", 2, 0, "CAM2.CC", "0", -1)
\endverbatim
</ol>
**/
